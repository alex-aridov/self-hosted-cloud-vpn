name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action (apply or destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy
concurrency:
  group: terraform-deploy
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_server_public_key: ${{ vars.SERVER_PUBLIC_KEY }}
      TF_VAR_server_private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
      TF_VAR_client_public_key: ${{ vars.CLIENT_PUBLIC_KEY }}
      TF_VAR_client_private_key: ${{ secrets.CLIENT_PRIVATE_KEY }}
      TF_VAR_server_password: ${{ secrets.SERVER_PASSWORD }}
      TF_VAR_dns_token: ${{ secrets.DNS_TOKEN }}
      TF_VAR_dns_host: ${{ vars.DNS_HOST }}
      TF_VAR_yc_cloud_id: ${{ vars.YC_CLOUD_ID }}
      TF_VAR_yc_folder_id: ${{ vars.YC_FOLDER_ID }}
      TF_LOG: INFO

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Yandex Cloud key
        working-directory: terraform
        run: |
          cat <<EOF > key.json
          ${{ secrets.YC_KEY }}
          EOF

      - name: Terraform Init
        working-directory: terraform
        run: >-
          terraform init 
          -backend-config="bucket=${{ vars.BACKEND_S3_BUCKET }}" 
          -backend-config="access_key=${{ secrets.BACKEND_S3_ACCESS_KEY }}" 
          -backend-config="secret_key=${{ secrets.BACKEND_S3_SECRET_KEY }}"

      - name: Terraform apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform
        run: terraform apply -input=false -no-color -lock-timeout=2m -auto-approve

      - name: Terraform destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: terraform
        run: terraform destroy -input=false -no-color -lock-timeout=2m -auto-approve